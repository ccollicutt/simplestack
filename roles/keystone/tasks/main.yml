---

- name: ensure required packages are installed
  apt: >
    name={{ item }}
    state=installed
    update_cache=yes
    cache_valid_time=3600
  with_items: packages

- name: install keystone.conf file from template
  template: >
    src=keystone.conf.j2
    dest=/etc/keystone/keystone.conf
    owner=root
    group=root
    mode=0644


- name: create keystone database
  mysql_db: >
    name=keystone
    state=present
  register: keystone

- name: create keystone mysql user
  mysql_user: >
    name=keystone
    password={{ keystone_mysql_password }}
    priv=keystone.*:ALL
    state=present

- name: run keystone db_sync
  command: keystone-manage db_sync
  when: keystone.changed

- name: restart keystone
  service: >
    name=keystone
    state=restarted
  when: keystone.changed

- name: ensure keystone keystone is running
  service: >
    name=keystone
    state=running

#- name: wait for keystone to come back up
#  wait_for: host="{{ keystone_server }}" port=35357

#
# Keystone endpoints
#

- name: create keystone identity point
  keystone_service: >
    insecure=yes
    name=keystone
    type=identity
    description="Keystone Identity Service"
    publicurl="https://{{ keystone_server }}:5000/v2.0"
    internalurl="https://{{ keystone_server }}:5000/v2.0"
    adminurl="https://{{ keystone_server }}:35357/v2.0"
    region={{ keystone_region }}
    token={{ keystone_admin_token }}
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create EC2 compatability keystone service
  keystone_service: >
    insecure=yes
    name=ec2
    type=ec2
    description="EC2 Compatability Layer"
    publicurl=https://{{ keystone_server }}:8773/services/Cloud
    internalurl=http://{{ keystone_server }}:8773/services/Cloud
    adminurl=http://{{ keystone_server }}:8773/services/Admin
    region={{ keystone_region }}
    token={{ keystone_admin_token }}
    endpoint="https://127.0.0.1:35357/v2.0"

#
# Create keystone tenants
#

- name: create service keystone tenant
  keystone_user: >
    token={{ keystone_admin_token }}
    tenant=service
    tenant_description="Service Tenant"
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create admin keystone tenant
  keystone_user: >
    token={{ keystone_admin_token }}
    tenant=admin tenant_description="Admin Tenant"
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create demo keystone tenant
  keystone_user: >
    token={{ keystone_admin_token }}
    tenant=demo
    tenant_description="Default Tenant"
    endpoint="https://127.0.0.1:35357/v2.0"

#
# Create keystone users
#

- name: create admin keystone user
  keystone_user: >
    token={{ keystone_admin_token }}
    user={{ keystone_admin_user }}
    tenant=demo
    password={{ keystone_admin_user_password }}
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create ec2 service keystone user
  keystone_user: >
    token={{ keystone_admin_token }}
    user=ec2
    tenant=service
    password={{ keystone_generic_service_password }}
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create test keystone user
  keystone_user: >
    token={{ keystone_admin_token }}
    user={{ keystone_test_user }}
    tenant=demo
    password={{ keystone_test_user_password }}
    endpoint="https://127.0.0.1:35357/v2.0"

#
# Keystone create and apply roles
#

- name: create an admin role and add the admin to it
  keystone_user: >
    token={{ keystone_admin_token }}
    role={{ keystone_admin_role }}
    user={{ keystone_admin_user }}
    tenant={{ keystone_admin_tenant }}
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create an admin role and add the admin to it
  keystone_user: >
    token={{ keystone_admin_token }}
    role={{ keystone_admin_role }}
    user=swift tenant=service
    endpoint="https://127.0.0.1:35357/v2.0"

- name: create an admin role and add the admin to it
  keystone_user: >
    token={{ keystone_admin_token }}
    role={{ keystone_admin_role }}
    user=ec2 tenant=service
    endpoint="https://127.0.0.1:35357/v2.0"
